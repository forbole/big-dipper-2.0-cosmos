
subscription LastHundredBlocks($address: String) {
  block(offset: 1, order_by: {height: desc}, limit: 100) {
    height
    validator {
      validatorInfo: validator_info {
        operatorAddress: operator_address
      }
    }
    transactions {
    	hash
  	}
    precommits: pre_commits(where: {validator: {validator_info: {operator_address: {_eq: $address}}}}) {
      validatorAddress: validator_address
    }
  }
}

subscription ValidatorLastSeenListener($address: String) {
  preCommit: pre_commit(limit: 1, where: {validator: {validator_info: {operator_address: {_eq: $address}}}}, order_by: {height: desc}) {
    height
    timestamp
  }
}

query ValidatorDescription($address: String) {
  validator(where: {validator_info: {operator_address: {_eq: $address}}}) {
    validatorDescriptions: validator_descriptions(order_by: {height: desc}, limit: 1) {
      details
      website
    }
  }
}

query ValidatorStatuses($address: String) {
  validator(where: {validator_info: {operator_address: {_eq: $address}}}) {
    validatorStatuses: validator_statuses(order_by: {height: desc}, limit: 1) {
      status
      jailed
      height
    }
  }
  slashingParams: slashing_params(order_by: {height: desc}, limit: 1) {
    params
  }
}

query ValidatorSigningInfos($address: String) {
  validator(where: {validator_info: {operator_address: {_eq: $address}}}) {
    validatorSigningInfos: validator_signing_infos(order_by: {height: desc}, limit: 1) {
      missedBlocksCounter: missed_blocks_counter
      tombstoned
    }
  }
}

query ValidatorInfo($address: String) {
  validator(where: {validator_info: {operator_address: {_eq: $address}}}) {
    validatorInfo: validator_info {
      operatorAddress: operator_address
      selfDelegateAddress: self_delegate_address
      maxRate: max_rate
    }
    validatorDescriptions: validator_descriptions(order_by: {height: desc}, limit: 1) {
      details
      website
    }
    validatorStatuses: validator_statuses(order_by: {height: desc}, limit: 1) {
      status
      jailed
      height
    }
    validatorSigningInfos: validator_signing_infos(order_by: {height: desc}, limit: 1) {
      missedBlocksCounter: missed_blocks_counter
      tombstoned
    }
    validatorCommissions: validator_commissions(order_by: {height: desc}, limit: 1) {
      commission
    }
  }
    slashingParams: slashing_params(order_by: {height: desc}, limit: 1) {
    params
  }
}

query ValidatorCommission($address: String) {
  validator(where: {validator_info: {operator_address: {_eq: $address}}}) {
    validatorCommissions: validator_commissions(order_by: {height: desc}, limit: 1) {
      commission
    }
  }
}

query ValidatorVotingPowers($address: String) {
  validator(where: {validator_info: {operator_address: {_eq: $address}}}) {
    validatorVotingPowers: validator_voting_powers(offset: 0, limit: 1, order_by: {height: desc}) {
      height
      votingPower: voting_power
    }
    validatorStatuses: validator_statuses(order_by: {height: desc}, limit: 1) {
      status
    }
  }
  stakingPool: staking_pool(order_by: {height: desc}, limit: 1, offset: 0) {
    height
    bonded: bonded_tokens
  }
}

query ValidatorAddress($address: String) {
  validator(where: {validator_info: {operator_address: {_eq: $address}}}) {
    validatorInfo: validator_info {
        operatorAddress: operator_address
        selfDelegateAddress: self_delegate_address
    }
  }
}
