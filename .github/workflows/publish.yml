name: Publish
on:
  workflow_dispatch:
    inputs:
       projects:
        description: "Project(s) to publish (to Akash)"
        required: true
       chain_type:
        description: "Chain Type to publish (default to mainnet when more than 1 was configured)"
        required: false
       base_path:
        description: "Override basePath in next.config.js (default to chainConfig)"
        required: false
       confirm:
        description: "enter \"CONFIRM\" to process"
        required: true
concurrency:
  group: publish-to-akash
  cancel-in-progress: true
defaults:
  run:
    shell: bash
jobs:
  validate:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.confirm == 'CONFIRM' }}
    name: Validate ${{ github.event.inputs.projects }}-${{ github.event.inputs.chain_type }}${{ github.event.inputs.base_path }}
    outputs:
      projects: ${{ steps.vars.outputs.projects }}
    steps:
      - uses: actions/checkout@v3
      - name: steps.vars.outputs.projects
        id: vars
        run: |
          PROJECTS='${{ github.event.inputs.projects }}' node <<EOF | tee -a $GITHUB_OUTPUT
          const projects = process.env.PROJECTS.split(/,/).map(p => p.trim()).filter(p => p);
          console.log('projects=' + JSON.stringify(projects));
          EOF
  publish:
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ needs.validate.outputs.projects != '[]' }}
    name: Publish ${{ needs.validate.outputs.projects }}
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        project: ${{ fromJSON(needs.validate.outputs.projects) }}
    steps:
      - uses: actions/checkout@v3
      - name: steps.vars.outputs.valid & Set steps.vars.outputs.sha_short & steps.vars.outputs.chain_type
        id: vars
        env:
          PROJECT_NAME: ${{ matrix.project }}
          NEXT_PUBLIC_CHAIN_TYPE: ${{ github.event.inputs.chain_type }}
        run: |
          echo 'valid='$(
            yarn workspace ${{ matrix.project }} info 2>1 1>/dev/null && echo yes || echo no
          ) | tee -a $GITHUB_OUTPUT

          echo 'sha_short='$(git rev-parse --short HEAD) | tee -a $GITHUB_OUTPUT

          # assign chain_type
          node <<EOF | tee -a $GITHUB_OUTPUT
          let chainType = process.env.NEXT_PUBLIC_CHAIN_TYPE;
          if (!chainType) chainType = 'mainnet';
          chainType = chainType.toLowerCase();
          const chainJson = require('./apps/' + process.env.PROJECT_NAME + '/src/chain.json');
          const { chains, ...settings } = chainJson;
          let chain = chains.find((c) => c.chainType?.toLowerCase() === chainType);
          if (!chain && chainType !== 'testnet') {
            chain = chains.find((c) => c.chainType?.toLowerCase() === 'testnet');
          }
          if (!chain) [chain] = chains;
          console.log('chain_type=' + (chain?.chainType?.toLowerCase() || 'mainnet'));
          EOF
      - name: Set up QEMU
        if: ${{ steps.vars.outputs.valid == 'yes' }}
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        if: ${{ steps.vars.outputs.valid == 'yes' }}
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub ðŸ‘¤
        if: ${{ steps.vars.outputs.valid == 'yes' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create the builder
        if: ${{ steps.vars.outputs.valid == 'yes' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          build-args: |
            PROJECT_NAME=${{ matrix.project }}
            NEXT_PUBLIC_CHAIN_TYPE=${{ github.event.inputs.chain_type }}
            NEXT_PUBLIC_BANNERS_JSON=${{ secrets.BANNERS_JSON }}
            TURBO_TEAM=${{ secrets.TURBO_TEAM }}
            TURBO_TOKEN=${{ secrets.TURBO_TOKEN }}
            NEXT_PUBLIC_SENTRY_DSN=${{ secrets.SENTRY_DSN }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            BASE_PATH=${{ github.event.inputs.base_path }}
          target: web
          tags: |
            forbole/big-dipper-2.0-cosmos:monorepo-${{ matrix.project }}-${{ steps.vars.outputs.chain_type }}-${{ steps.vars.outputs.sha_short }}
      - name: Publish to akash
        if: ${{ steps.vars.outputs.valid == 'yes' }}
        run: >
          curl -i -X POST -H "Content-Type: application/json"
          -d '{"parameters":{"tag": "monorepo-${{ matrix.project }}-${{ steps.vars.outputs.chain_type }}-${{ steps.vars.outputs.sha_short }}"}}'
          -k ${{ secrets.WEBHOOK_URL }}/${{ matrix.project }}-${{ steps.vars.outputs.chain_type }}
          -u "deploy:${{ secrets.AKASH_WEBHOOK_SECRET }}" | tee -a $GITHUB_STEP_SUMMARY
