name: Preview
on:
  workflow_dispatch:
    inputs:
       project_name:
        description: "Project to publish (to Vercel)"
        required: true
       chain_type:
        description: "Chain Type to publish (default to mainnet when more than 1 was configured)"
        required: false
       base_path:
        description: "Override basePath in next.config.js (default to basePath in chainConfig)"
        required: false
defaults:
  run:
    shell: bash
jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate ${{ github.event.inputs.chain_type }}${{ github.event.inputs.base_path }}(${{ github.event.inputs.projects }})
    outputs:
      projects: ${{ steps.vars.outputs.projects }}
    steps:
      - uses: actions/checkout@v3
      - name: steps.vars.outputs.projects
        id: vars
        run: |
          PROJECTS='${{ github.event.inputs.projects }}' node <<EOF | tee -a $GITHUB_OUTPUT $GITHUB_STEP_SUMMARY
          const projects = process.env.PROJECTS.split(/,/).map(p => p.trim()).filter(p => p);
          console.log('projects=' + JSON.stringify(projects));
          EOF
  publish:
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ needs.validate.outputs.projects != '[]' }}
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        project: ${{ fromJSON(needs.validate.outputs.projects) }}
    name: Publish ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v3
      - name: Set steps.vars.outputs.valid
        id: vars
        env:
            PROJECT_NAME: ${{ matrix.project }}
            NEXT_PUBLIC_CHAIN_TYPE: ${{ github.event.inputs.chain_type }}
        run: |
          echo 'valid='$(
            yarn workspace ${{ matrix.project }} info 2>1 1>/dev/null && echo yes || echo no
          ) | tee -a $GITHUB_OUTPUT

          # assign chain_type
          node <<EOF | tee -a $GITHUB_OUTPUT
          const chainType = process.env.NEXT_PUBLIC_CHAIN_TYPE?.toLowerCase() || 'mainnet';
          const chainJson = require('./apps/' + process.env.PROJECT_NAME + '/src/chain.json');
          const { chains, ...settings } = chainJson;
          let chain = chains.find((c) => c.chainType?.toLowerCase() === chainType);
          if (!chain && chainType !== 'testnet') {
            chain = chains.find((c) => c.chainType?.toLowerCase() === 'testnet');
          }
          if (!chain) [chain] = chains;
          console.log('chain_type=' + (chain?.chainType?.toLowerCase() || 'mainnet'));
          EOF
      - name: Insall Vercel CLI
        if: ${{ steps.vars.outputs.valid == 'yes' }}
        run: npm i -g vercel
      - name: Generate vercel.json
        if: ${{ steps.vars.outputs.valid == 'yes' }}
        env:
            PROJECT_NAME: ${{ matrix.project }}
            NEXT_PUBLIC_CHAIN_TYPE: ${{ steps.vars.outputs.chain_type }}
            BASE_PATH: ${{ github.event.inputs.base_path }}
        run: |
          node <<EOF > vercel.json
          const projectName = process.env.PROJECT_NAME || 'web';
          const chainType = process.env.NEXT_PUBLIC_CHAIN_TYPE?.toLowerCase() || 'mainnet';
          const config = {
            buildCommand: 'NEXT_PUBLIC_CHAIN_TYPE=' + chainType + ' BASE_PATH=' + process.env.BASE_PATH +
              ' yarn turbo run build --filter=' + projectName + '...',
            outputDirectory: 'apps/' + projectName + '/.next',
            installCommand: 'yarn workspaces focus --production ' + projectName + ' && yarn add typescript -D',
            devCommand: 'yarn turbo run dev --filter=' + projectName + '...',
            framework: 'nextjs',
            ignoreCommand: 'echo always build && exit 1',
            redirects: process.env.BASE_PATH !== "/" && /^web-/.test(projectName)
              ? [{ source: '/', destination: '/' + projectName.replace(/^web-/, '') }]
              : [],
          };
          console.log(JSON.stringify(config, null, 2));
          EOF
      - name: Deploy preview to Vercel
        if: ${{ steps.vars.outputs.valid == 'yes' }}
        env:
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
            VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
            VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel -t ${{ secrets.VERCEL_TOKEN }} | tee -a $GITHUB_STEP_SUMMARY
