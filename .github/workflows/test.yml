name: Test
on:
  pull_request:
concurrency:
  group: ${{ github.ref }}-test
  cancel-in-progress: true
env:
  HUSKY: 0
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  NEXT_TELEMETRY_DISABLED: 1
  ENV NODE_ENV: production
jobs:
  install:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.vars.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Update yarn
        run: corepack enable && yarn --version
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install modules
        run: yarn --immutable
      - name: Set needs.install.outputs.matrix
        id: vars
        run: "echo 'matrix='$( ls apps | grep web | jq -scrRM '{\"project\": split(\"\\n\")[:-1]}' ) >> $GITHUB_OUTPUT"
  lint:
    if: ${{ success() }}
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update yarn
        run: corepack enable && yarn --version
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/apps/*/.next/cache
          key: ${{ runner.os }}-lint-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('apps/**/*.[jt]s', 'apps/**/*.[jt]sx', 'packages/**/*.[jt]s', 'packages/**/*.[jt]sx') }}
          restore-keys: ${{ runner.os }}-lint-${{ hashFiles('**/yarn.lock') }}-
      - name: Install modules
        run: yarn --immutable
      - name: Run check-types & lint check
        run: yarn check-types:ci && yarn lint:ci

  test:
    if: ${{ success() }}
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update yarn
        run: corepack enable && yarn --version
      - name: Set steps.jestvars.outputs.cacheDirectory
        id: jestvars
        run: echo 'cacheDirectory='$(npx jest --showConfig | jq -cr '.configs[0].cacheDirectory') >> $GITHUB_OUTPUT
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - uses: actions/cache@v3
        with:
          path: ${{ steps.jestvars.outputs.cacheDirectory }}
          key: ${{ runner.os }}-jest-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('apps/**/*.test.[jt]s', 'apps/**/*.test.[jt]sx', 'packages/**/*.test.[jt]s', 'packages/**/*.test.[jt]sx') }}
          restore-keys: ${{ runner.os }}-jest-${{ hashFiles('**/yarn.lock') }}-
      - name: Install modules
        run: yarn --immutable
      - name: Run tests
        run: yarn test:ci -- --coverage

  build:
    if: ${{ success() }}
    needs: install
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.install.outputs.matrix )}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update yarn
        run: corepack enable && yarn --version
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/apps/${{ matrix.project }}/.next/cache
          key: ${{ runner.os }}-next-${{ hashFiles('**/yarn.lock') }}-${{ matrix.project }}-${{ hashFiles(format('apps/{0}/**/*.[jt]s', matrix.project), format('apps/{0}/**/*.[jt]sx', matrix.project), 'packages/**/*.[jt]s', 'packages/**/*.[jt]sx') }}
          restore-keys: ${{ runner.os }}-next-${{ hashFiles('**/yarn.lock') }}-${{ matrix.project }}-
      - name: Install modules
        run: yarn --immutable
      - name: Run build check
        run: yarn build:ci --filter=${{ matrix.project }}
  e2e:
    if: ${{ success() }}
    needs: build
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.28.1-focal
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Update yarn
        run: corepack enable && yarn --version
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/apps/web/.next/cache
          key: ${{ runner.os }}-next-${{ hashFiles('**/yarn.lock') }}-web-${{ hashFiles(format('apps/{0}/**/*.[jt]s', 'web'), format('apps/{0}/**/*.[jt]sx', 'web'), 'packages/**/*.[jt]s', 'packages/**/*.[jt]sx') }}
          restore-keys: ${{ runner.os }}-next-${{ hashFiles('**/yarn.lock') }}-web-
      - name: Install modules
        run: yarn --immutable
      - name: Build Next.js app
        run: yarn build
      - name: Run Playwright tests
        run: yarn playwright test
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
